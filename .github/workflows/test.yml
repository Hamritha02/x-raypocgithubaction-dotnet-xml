name: CI2

on:
  push:
  workflow_dispatch:
   
jobs:
  build_and_test:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'Solution1/UnitTest.sln'
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      
   
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x


    - name: Restore dependencies
      run: dotnet restore $SOLUTION

    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG
      
    - name: Test
      run: dotnet test $SOLUTION --configuration $BUILD_CONFIG --logger "xunit;LogFileName=test-results.xml" || true
    
    - name: Publish Specflow Test Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          **/test-results.xml
          
    - name: Get Xray Token and Send test Report to Xray API
      id: xray-token
      run: |
        python - <<EOF
        import requests
        from requests.auth import HTTPBasicAuth
        import os
        import json      
       

        client_id = "${{ secrets.CLIENT_ID }}"
        client_secret = "${{ secrets.CLIENT_SECRET }}"

        xray_auth_url = "https://xray.cloud.getxray.app/api/v1/authenticate"
        response = requests.post(xray_auth_url, json={"client_id": client_id, "client_secret": client_secret})
        
        auth_token = response.json()
        os.environ["XRAY_TOKEN"] = response.json()
        print("Response content....:", response.json())
        print("response====",response.content)
        
        xray_token = "${{ steps.xray-token.outputs.XRAY_TOKEN }}"

        xray_import_url = "https://xray.cloud.getxray.app/api/v1/import/execution/xunit?projectKey=PX"
        test_results_file = "/home/runner/work/x-raypocgithubaction-dotnet-xml/x-raypocgithubaction-dotnet-xml/Solution1/UnitTestProject/TestResults/test-results.xml"

        headers = {
            "Content-Type": "text/xml",
            "Authorization": f"Bearer {auth_token}"
        }
        
        payload = json.dumps({
            "fields": {
                "fixVersions" : "1000",
                "summary": "Main order flow broken",
                "description": "Order entry fails when selecting supplier.",
                "project": {
                    "key": "PX"
                }
            },
            "update": {},
            "info": {
                "summary": "TEST Execution of automated tests for release v1.3",
                "description": "TEST This execution is automatically created when importing execution results from an external source",
                "user": "hamrithadaya@gmail.com",
                "startDate": "2014-08-30T11:47:35+01:00",
                "finishDate": "2014-08-30T11:53:00+01:00"
            }
        } )

        with open(test_results_file, "rb") as file:
           response = requests.post(xray_import_url, headers=headers, data=file, json.dumps=payload)

            
        print("response.status_code ", response.status_code)
        
        
        if response.status_code == 200:
            print("Test results imported to Xray successfully.")
            print("response.text ", response.text)
            # Parse the response content as JSON
            response_data = response.json()

            # Access the 'key' value from the response
            print("...........................................................")
            print("JIRA ticket created with ID :", response_data['id'])
            print("JIRA ticket created with key :", response_data['key'])
            print("JIRA ticket created link :", response_data['self'])
            print("..........................................................")
            
        else:
            print("Failed to import test results to Xray. Error:", response.text)
       
        print(".....EXIT   IMPORT   .....") 
        
        
        print("........................GET API STARTS..................................")
        url = "https://hamritha.atlassian.net/rest/api/3/issue/"+response_data['id']
        auth = HTTPBasicAuth("hamrithadaya@gmail.com", "auth_token")
        headers = {
         "Accept": "application/json"
        }
        response = requests.request(
          "GET",
          url,
          headers=headers,
          auth=auth
        )
        print(response.text)
        
        print("........................GET API ENDS..................................")
        
        
        url = "https://hamritha.atlassian.net/rest/api/3/issue/"+response_data['id']
        
        print("EDIT Ticket URL :",url)
        auth = HTTPBasicAuth("hamrithadaya@gmail.com", "auth_token")
        print("Session Auth token: ",auth_token)
        headers = {
          "Accept": "application/json",
          "Content-Type": "application/json"
       
        }
       
        payload = json.dumps( {
           
        } )
        print("Line before Edit API call")
        response = requests.request(
           "PUT",
           url,
           data=payload,
           headers=headers,
           auth=auth
          
        )
        print("Line afer  Edit API call")
        print("response.status_code ", response.status_code)
        print("..............................")
        print(response.text)
        
        EOF

